{
    "config": {
        "step": {
            "user": {
                "description": "New Battery Notes will be discovered if they are in the library.\nTo add new Battery Notes manually go into the integration page, select Add Battery Note and follow the instructions.\nIf you need help with the configuration have a look here: https://andrew-codechimp.github.io/HA-Battery-Notes/",
                "title": "Setup Battery Notes"
            },
            "battery": {
                "description": "Manufacturer: {manufacturer}\nModel: {model}\nModel ID: {model_id}\nHardware version: {hw_version}",
                "data": {
                    "battery_type": "Baterijos tipas",
                    "battery_quantity": "Baterijų kiekis",
                    "battery_low_threshold": "Battery low threshold",
                    "battery_low_template": "Battery low template",
                    "filter_outliers": "Filter outliers"
                },
                "data_description": {
                    "battery_low_threshold": "Įrašius 0 bus naudojama numatytoji vertė",
                    "battery_low_template": "Template to determine a battery is low, should return true if low\nOnly needed for non-standard battery levels",
                    "filter_outliers": "Filter out large battery level drops, reducing falsely firing events on devices that erroneously report levels occasionally"
                }
            }
        },
        "abort": {
            "already_configured": "Integration is already configured",
            "created_sub_entry": "Battery Note created successfully"
        },
        "error": {
            "unknown": "Įvyko nežinoma klaida."
        }
    },
    "config_subentries": {
        "battery_note": {
            "initiate_flow": {
                "user": "Add battery note"
            },
            "entry_type": "Battery note",
            "step": {
                "user": {
                    "description": "Daugiau pagalbos apie konfigūraciją rasite čia: https://andrew-codechimp.github.io/HA-Battery-Notes/",
                    "data": {
                        "association_type": "Association type"
                    },
                    "menu_options": {
                        "device": "Device (recommended)",
                        "entity": "Entity"
                    },
                    "title": "Choose your association type"
                },
                "device": {
                    "data": {
                        "device_id": "Prietaisas",
                        "name": "Pavadinimas"
                    },
                    "data_description": {
                        "name": "Leaving blank will take the name from the source device"
                    }
                },
                "entity": {
                    "data": {
                        "source_entity_id": "Entity",
                        "name": "Pavadinimas"
                    },
                    "data_description": {
                        "name": "Leaving blank will take the name from the source entity"
                    }
                },
                "battery": {
                    "description": "Manufacturer: {manufacturer}\nModel: {model}\nModel ID: {model_id}\nHardware version: {hw_version}",
                    "data": {
                        "battery_type": "Baterijos tipas",
                        "battery_quantity": "Baterijų kiekis",
                        "battery_low_threshold": "Battery low threshold",
                        "battery_low_template": "Battery low template",
                        "filter_outliers": "Filter outliers"
                    },
                    "data_description": {
                        "battery_low_threshold": "Įrašius 0 bus naudojama numatytoji vertė",
                        "battery_low_template": "Template to determine a battery is low, should return true if low\nOnly needed for non-standard battery levels",
                        "filter_outliers": "Filter out large battery level drops, reducing falsely firing events on devices that erroneously report levels occasionally"
                    }
                },
                "manual": {
                    "description": "This device is marked in the library as manual, variants use different battery types so it cannot be set in the library.\nThe next step will allow you to set your battery type but please do not submit a device request.",
                    "title": "Device manual configuration"
                },
                "reconfigure": {
                    "description": "Manufacturer: {manufacturer}\nModel: {model}\nModel ID: {model_id}\nHardware version: {hw_version}",
                    "data": {
                        "name": "Pavadinimas",
                        "battery_type": "Baterijos tipas",
                        "battery_quantity": "Baterijų kiekis",
                        "battery_low_threshold": "Battery low threshold",
                        "battery_low_template": "Battery low template",
                        "filter_outliers": "Filter outliers"
                    },
                    "data_description": {
                        "name": "Leaving blank will take the name from the source device",
                        "battery_low_threshold": "Įrašius 0 bus naudojama numatytoji vertė",
                        "battery_low_template": "Template to determine a battery is low, should return true if low\nOnly needed for non-standard battery levels",
                        "filter_outliers": "Filter out large battery level drops, reducing falsely firing events on devices that erroneously report levels occasionally"
                    }
                }
            },
            "abort": {
                "reconfigure_successful": "Re-configuration was successful",
                "already_configured": "Prietaisas jau sukonfigūruotas"
            },
            "error": {
                "unknown": "Įvyko nežinoma klaida.",
                "unconfigurable_entity": "It is not possible to add this entity to Battery Notes.",
                "orphaned_battery_note": "The associated device or entity no longer exists for this Battery Note."
            }
        }
    },
    "options": {
        "step": {
            "init": {
                "data": {
                    "show_all_devices": "Show all devices",
                    "hide_battery": "Hide battery",
                    "round_battery": "Round battery",
                    "default_battery_low_threshold": "Default battery low threshold",
                    "battery_increase_threshold": "Battery increase threshold"
                },
                "data_description": {
                    "show_all_devices": "Show all devices in the device dropdown, otherwise only those with batteries will be shown.",
                    "hide_battery": "Hide the standard battery when adding Battery+.",
                    "round_battery": "Round Battery+ to whole percentages.",
                    "default_battery_low_threshold": "The default threshold where a devices battery_low entity is set to true and the battery_notes_battery_threshold event is fired if the battery is below this threshold, can be overriden per device in device configuration.",
                    "battery_increase_threshold": "The threshold where the battery_notes_battery_increased event is fired, use this event for battery replaced automations. The threshold is the difference in increase between previous and current battery level."
                },
                "sections": {
                    "advanced_settings": {
                        "name": "Advanced settings",
                        "data": {
                            "enable_autodiscovery": "Auto discovery",
                            "enable_replaced": "Enable battery replaced",
                            "user_library": "User library"
                        },
                        "data_description": {
                            "enable_autodiscovery": "Auto discovery of devices that are in the library.",
                            "enable_replaced": "Enable the battery replaced button on each battery note.",
                            "user_library": "If specified then a user library file will be searched prior to the main library, the user library must be in the same format as the library and placed in `config/.storage/battery_notes`."
                        }
                    }
                }
            }
        },
        "error": {
            "unknown": "Įvyko nežinoma klaida."
        }
    },
    "battery_note_options": {
        "step": {
            "init": {
                "description": "Manufacturer: {manufacturer}\nModel: {model}\nModel ID: {model_id}\nHardware version: {hw_version}",
                "data": {
                    "name": "Pavadinimas",
                    "battery_type": "Baterijos tipas",
                    "battery_quantity": "Baterijų kiekis",
                    "battery_low_threshold": "Battery low threshold",
                    "battery_low_template": "Battery low template",
                    "filter_outliers": "Filter outliers"
                },
                "data_description": {
                    "name": "Leaving blank will take the name from the source device",
                    "battery_low_threshold": "Įrašius 0 bus naudojama numatytoji vertė",
                    "battery_low_template": "Template to determine a battery is low, should return true if low\nOnly needed for non-standard battery levels",
                    "filter_outliers": "Filter out large battery level drops, reducing falsely firing events on devices that erroneously report levels occasionally"
                }
            }
        },
        "error": {
            "orphaned_battery_note": "The associated device or entity no longer exists for this Battery Note.",
            "unknown": "Įvyko nežinoma klaida."
        }
    },
    "entity": {
        "binary_sensor": {
            "battery_low": {
                "name": "{device_name}Baterija senka",
                "state_attributes": {
                    "battery_low_threshold": {
                        "name": "Battery low threshold"
                    }
                }
            }
        },
        "button": {
            "battery_replaced": {
                "name": "{device_name}Baterija pakeista"
            }
        },
        "sensor": {
            "battery_plus": {
                "name": "{device_name}Baterija+",
                "state_attributes": {
                    "battery_type": {
                        "name": "Baterijos tipas"
                    },
                    "battery_quantity": {
                        "name": "Baterijų kiekis"
                    },
                    "battery_type_and_quantity": {
                        "name": "Baterijų tipas ir kiekis"
                    },
                    "battery_last_replaced": {
                        "name": "Baterija paskutinį kartą keista"
                    },
                    "battery_low": {
                        "name": "Baterija senka"
                    },
                    "battery_low_threshold": {
                        "name": "Battery low threshold"
                    },
                    "battery_last_reported": {
                        "name": "Battery last reported"
                    },
                    "battery_last_reported_level": {
                        "name": "Battery last reported level"
                    },
                    "source_entity_id": {
                        "name": "Source Entity Id"
                    },
                    "device_id": {
                        "name": "Device Id"
                    },
                    "device_name": {
                        "name": "Device name"
                    }
                }
            },
            "battery_type": {
                "name": "{device_name}Baterijos tipas",
                "state_attributes": {
                    "battery_type": {
                        "name": "Baterijos tipas"
                    },
                    "battery_quantity": {
                        "name": "Baterijų kiekis"
                    }
                }
            },
            "battery_last_replaced": {
                "name": "{device_name}Baterija paskutinį kartą keista"
            }
        }
    },
    "services": {
        "set_battery_replaced": {
            "description": "Set the battery last replaced.",
            "fields": {
                "device_id": {
                    "description": "Device that has had its battery replaced.",
                    "name": "Prietaisas"
                },
                "entity_id": {
                    "description": "Entity that has had its battery replaced.",
                    "name": "Entity"
                },
                "datetime_replaced": {
                    "description": "Date replaced.",
                    "name": "Data"
                }
            },
            "name": "Set battery replaced"
        },
        "check_battery_last_reported": {
            "description": "Raise events for devices that haven't reported their battery level.",
            "fields": {
                "days_last_reported": {
                    "description": "Number of days since a device last reported its battery level.",
                    "name": "Dienos"
                }
            },
            "name": "Check battery last reported"
        },
        "check_battery_low": {
            "description": "Raise events for devices that have a low battery.",
            "name": "Check battery low"
        }
    },
    "issues": {
        "missing_device": {
            "title": "Orphaned Battery Note",
            "fix_flow": {
                "step": {
                    "confirm": {
                        "title": "Orphaned Battery Note",
                        "description": "The associated device or entity no longer exists for the Battery Note entry {name}, the Battery Note should be deleted.\nSelect **Submit** to delete this Battery Note."
                    }
                }
            }
        },
        "deprecated_yaml": {
            "title": "The {integration_title} YAML configuration is being removed",
            "description": "Configuring {integration_title} using YAML is being removed.\n\nYour existing YAML configuration has been imported into the UI automatically.\n\nRemove the `{domain}` configuration from your configuration.yaml file and restart Home Assistant to fix this issue."
        }
    },
    "exceptions": {
        "not_configured_in_battery_notes": {
            "message": "{source} is not configured in Battery Notes."
        }
    }
}