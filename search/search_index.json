{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Battery Notes for Home Assistant","text":"<p>Integration to add battery notes to a device or entity, with automatic discovery via a growing battery library for devices. Track the battery type, when the battery was replaced, when a battery is low based on device or global thresholds and also when a battery hasn't been reported for a while.</p> <p>Dashboard cards usage</p> <p>A battery+ sensor provides useful attributes for easy use in dashboards, the standard battery can optionally be hidden.</p> <p>Notifications and automations</p> <p>Battery low, replaced and not reported are all exposed via events and actions, using these you can create your own automations to generate notifications or other actions, there are some predefined ones in community.</p> <p>Please  this repo on GitHub if you find it useful If you want to show your support please</p> <p></p>"},{"location":"#features","title":"Features","text":"<p>The integration will add additional diagnostic entities to your device.</p> <p></p> <ul> <li>Entities</li> <li>Actions</li> <li>Events</li> </ul>"},{"location":"#how-to-use-battery-notes","title":"How to use Battery Notes","text":"<p>Once you have installed the integration you will hopefully have some devices discovered and you can follow the Notification to confirm their details and add them, if you don't have devices discovered you can add them manually.</p> <p></p>"},{"location":"#to-add-a-battery-note-manually","title":"To add a battery note manually","text":"<ul> <li>Go to Settings/Integrations and click Add Integration.</li> <li>Select Battery Notes.</li> <li>Choose Device or Entity and click next. Device will automatically detect a battery and will work for most common devices, you should use entity if your device has multiple batteries or when an entity does not have a device.</li> <li>Choose your device or entity from the drop down and click next.</li> <li>Enter the battery type and quantity and optionally a battery low threshold and click submit.</li> </ul> <p>Info</p> <p>The library is updated automatically with new devices approximately every 24 hours from starting Home Assistant, if you have added a device to the library using this form then this will take about a day to be discovered once it's approved and added.</p>"},{"location":"#battery-low-template","title":"Battery Low Template","text":"<p>This is for advanced use where a device does not have a typical battery percentage or battery low boolean (or it is innacurate) but still provides an indication of the level, such as a string, boolean or voltage. You can specify a template that must return true when the battery is deemed low.</p> <p>Example templates</p> <pre><code>{{ states('sensor.mysensor_battery_low') }}\n{{ states('sensor.mysensor_battery_level') == \"Low\" }}\n{{ states('sensor.mysensor_battery_voltage') | float(5) &lt; 1 }}\n</code></pre> <p>Info</p> <p>If a template is specified then the battery percentage will be ignored when evaluating threshold and increased events.</p>"},{"location":"#filter-outliers","title":"Filter Outliers","text":"<p>This is for advanced use when a device occasionally erroneously reports a very low battery level before going back to its true value, which causes battery low events to be raised. If you switch this on for a device then that devices battery low events will be delayed until it has three consistently low states.</p>"},{"location":"#community-contributions","title":"Community Contributions","text":"<p>A collection of community contributions can be found on the community contributions page.</p>"},{"location":"#faq","title":"FAQ","text":"<p>Before raising anything, please read through the faq. If you have questions, then you can raise a discussion. If you have found a bug or have a feature request please raise it using the appropriate report template.</p>"},{"location":"actions/","title":"Actions","text":""},{"location":"actions/#battery_notesset_battery_replaced","title":"battery_notes.set_battery_replaced","text":"<p>For updating the battery replaced date. This allows you to change the date a battery was replaced.</p> <p>See how to use this action in the community contributions</p> Data attribute Optional Description <code>device_id</code> <code>yes</code> The device id that you want to change the battery replaced date for. <code>source_entity_id</code> <code>yes</code> The entity id that you want to change the battery replaced date for (only used for entity associated battery notes). <code>datetime_replaced</code> <code>yes</code> The optional datetime that you want to set the battery replaced to, if omitted the current date/time will be used. <p>You must specify either a device_id or entity_id, entity_id will be used in preference if both are specified.  This allows the action to work with battery notes associated with both a device and also an individual entity, whether it is part of a device or not.</p>"},{"location":"actions/#battery_notescheck_battery_last_reported","title":"battery_notes.check_battery_last_reported","text":"<p>For raising events for devices that haven't reported their battery level.  </p> <p>The action will raise a seperate battery_not_reported event for each device where its last reported date is older than the number of days specified.  </p> <p>You can use this action to schedule checks on batteries that is convenient to you, e.g. when you wake up, once a week etc.  </p> <p>See how to use this action in the community contributions</p> Data attribute Optional Description <code>days_last_reported</code> <code>no</code> The number of days since a device last reported its battery level."},{"location":"actions/#battery_notescheck_battery_low","title":"battery_notes.check_battery_low","text":"<p>For raising events for devices that have a battery low status.  </p> <p>The action will raise a seperate battery_threshold event for each device that have a battery low status.  </p> <p>You can use this action as a reminder that is convenient to you, e.g. when you wake up, once a week etc.  The event has a boolean data item <code>reminder</code> to determine if the event was raised by this action or the device battery going to a low state.</p> <p>See how to use this action in the community contributions</p>"},{"location":"blueprints/","title":"Blueprints","text":"<p>Blueprints are an excellent way to get you up and running with the integration quickly. They can also be used as a guide for setting up new automations which you can tailor to your needs.</p>"},{"location":"blueprints/#battery-threshold","title":"Battery Threshold","text":"<p>Install blueprint | Source</p> <p>This blueprint will allow notifications to be raised and/or custom actions to be performed when the battery threshold is met. It is extended from the community Battery Low Notification automation yaml for those who'd prefer an easy way to get started.</p>"},{"location":"blueprints/#battery-replaced","title":"Battery Replaced","text":"<p>Install blueprint | Source</p> <p>This blueprint will automatically update the battery replaced sensor and custom actions to be performed when the battery increases. It is extended from the community Battery Replaced automation yaml for those who'd prefer an easy way to get started.</p>"},{"location":"blueprints/#battery-not-reported","title":"Battery Not Reported","text":"<p>Install blueprint | Source</p> <p>This blueprint will allow notifications to be raised and/or custom actions to be performed when the battery not reported event is fired. It is extended from the community Battery Not Reported automation yaml for those who'd prefer an easy way to get started.</p> <p>Info</p> <p>You must trigger the check_battery_not_reported action via an automation to raise events, see Check Battery Last Reported Daily.</p>"},{"location":"community/","title":"Community Contributions","text":""},{"location":"community/#dashboards","title":"Dashboards","text":""},{"location":"community/#battery-state-card","title":"Battery State Card","text":"<p>Using the excellent Battery State Card by maxwroc you can easily display devices with their batteries required where the devices battery threshold indicates it's low and show be replaced.</p> <pre><code>type: custom:battery-state-card\nsecondary_info: \"{attributes.battery_type_and_quantity}\"\nround: 0\nfilter:\n  include:\n    - name: entity_id\n      value: \"*_battery_plus\"\n  exclude:\n    - name: attributes.battery_low\n      value: false\nbulk_rename:\n  - from: \"Battery+\"\nsort:\n  - state\n</code></pre>"},{"location":"community/#get-a-markdown-summary-of-your-battery-quantities","title":"Get a markdown summary of your battery quantities","text":"<p>This is from the excellent German blog Smart Live The overview video is available on YouTube here</p> <pre><code>{% set ns_batteries = namespace(batteries={}) %}\n{% for entity_id in integration_entities('battery_notes') if entity_id is search('_battery_type$', ignorecase=False) -%}\n {% set battery_type = states[entity_id].state %}\n {% set battery_split = battery_type.split('\u00d7') %}\n {% if battery_split | length &gt; 1 %}\n {% set battery_type = battery_split[-1] | trim %}\n {% set battery_count = battery_split[0] | int(1) %}\n {% else %}\n {% set battery_count = 1 %}\n {% endif %}\n {% if battery_type not in ns_batteries.batteries %}\n {% set ns_batteries.batteries = dict(ns_batteries.batteries, **{battery_type: battery_count}) %}\n {% else %}\n {% set ns_batteries.batteries = dict(ns_batteries.batteries, **{battery_type: ns_batteries.batteries[battery_type] + battery_count}) %}\n {% endif %}\n{% endfor %}  | Type | Count |\n| :-- | --: |\n{% for bt in ns_batteries.batteries | dictsort(False, 'value') | reverse -%}\n | {{ bt[0] }} | {{ [bt][0][1] }} |\n{% endfor %}\n</code></pre>"},{"location":"community/#search-for-devices-with-a-particular-battery","title":"Search for devices with a particular battery","text":"<p>Again from the excellent Smart Live This requires creating a helper of type text called <code>Battery search</code> with a max length of 20, which you can then reference in the below yaml on a dashboard.</p> <pre><code>type: vertical-stack\ncards:\n  - type: entities\n    entities:\n      - entity: input_text.battery_search\n        name: Search by battery type\n        icon: mdi:magnify\n        secondary_info: none\n    state_color: false\n  - type: markdown\n    content: |-\n      {% set search_term = states('input_text.battery_search') | upper | trim %}\n      {% if search_term != \"\" %}     \n        {% set devices = states | selectattr('attributes.battery_type', 'defined') \n                                  | selectattr('entity_id', 'search', '_battery_type$') | list %}\n        {% if search_term | count &lt; 7 %}\n          {% set matching_devices = devices | selectattr('attributes.battery_type', 'string')\n                                              | selectattr('attributes.battery_type', 'eq', search_term) \n                                              | map(attribute='name') | unique | list %}\n        {% else %}\n          {% set matching_devices = devices | selectattr('attributes.battery_type', 'string')\n                                              | selectattr('attributes.battery_type', 'search', search_term, ignorecase=true) \n                                              | map(attribute='name') | unique | list %}  \n        {% endif %}\n        {% if matching_devices | length &gt; 0 %}\n          {{ matching_devices | join('\\n') }}\n        {% else %}\n          No devices with such battery type\n        {% endif %}\n      {% else %}\n        Search result\n      {% endif %}\n</code></pre> <p></p>"},{"location":"community/#automations","title":"Automations","text":""},{"location":"community/#battery-low-notification","title":"Battery Low Notification","text":"<p>Raise a persistent notification when a battery is low, dismiss when it's not low</p> <p>Note</p> <p>Battery Threshold events are only raised when the device has a Battery+ entity or a Battery Low Template is added to the Battery Notes configuration.</p> <pre><code>alias: Battery Low Notification\ndescription: Battery Low Notification with auto dismiss\nmode: queued\ntriggers:\n  - trigger: event\n    event_type: battery_notes_battery_threshold\n    event_data:\n      battery_low: true\n    id: low\n    alias: Battery went low\n  - trigger: event\n    event_type: battery_notes_battery_threshold\n    event_data:\n      battery_low: false\n    id: high\n    alias: Battery went high\nconditions: []\nactions:\n  - choose:\n      - conditions:\n          - condition: trigger\n            id:\n              - low\n        sequence:\n          - action: persistent_notification.create\n            data:\n              title: |\n                {{ trigger.event.data.device_name }} Battery Low\n              notification_id: \"{{ trigger.event.data.device_id }}-{{ trigger.event.data.source_entity_id }}\"\n              message: &gt;\n                The device has a battery level of {{\n                trigger.event.data.battery_level }}% {{ '\\n' -}} You need {{\n                trigger.event.data.battery_quantity }}\u00d7 {{\n                trigger.event.data.battery_type }}\n      - conditions:\n          - condition: trigger\n            id:\n              - high\n        sequence:\n          - action: persistent_notification.dismiss\n            data:\n              notification_id: \"{{ trigger.event.data.device_id }}-{{ trigger.event.data.source_entity_id }}\"\n</code></pre>"},{"location":"community/#check-battery-low-daily-reminder","title":"Check Battery Low daily reminder","text":"<p>Call the check battery low action every day to raise events for those that are still low. To be used in conjunction with a Battery Low Notification or similar.</p> <pre><code>alias: Daily Battery Low Check\ndescription: Check whether a battery is low\nmode: single\ntriggers:\n  - trigger: time\n    at: \"09:00:00\"\nconditions: []\nactions:\n  - action: battery_notes.check_battery_low\n</code></pre>"},{"location":"community/#check-battery-low-weekly-reminder","title":"Check Battery Low weekly reminder","text":"<p>Weekly reminders are a little trickier, you will need to create a Schedule Helper for when you want the battery check to occur then use this automation for when the helper is on. Below I am referencing a schedule helper called maintenance which I have set to come on weekly. To be used in conjunction with a Battery Low Notification or similar.</p> <pre><code>alias: Battery Low Check\ndescription: Check whether a battery is low\nmode: single\ntriggers:\n  - trigger: state\n    entity_id:\n      - schedule.maintenance\n    to: \"on\"\nconditions: []\nactions:\n  - action: battery_notes.check_battery_low\n    data: {}\n</code></pre>"},{"location":"community/#battery-replaced","title":"Battery Replaced","text":"<p>Mark a battery as replaced when there is an increase in battery level.</p> <p>Note</p> <p>Battery Increased events are only raised when the device has a Battery+ entity or a Battery Low Template is added to the Battery Notes configuration.</p> <pre><code>alias: Battery Replaced\ndescription: Battery Replaced\nmode: queued\ntriggers:\n  - trigger: event\n    event_type: battery_notes_battery_increased\nconditions: []\nactions:\n  - action: battery_notes.set_battery_replaced\n    data:\n      device_id: \"{{ trigger.event.data.device_id }}\"\n      source_entity_id: \"{{ trigger.event.data.source_entity_id }}\"\n</code></pre> <p>Send a notification when there is an increase in battery level.</p> <pre><code>alias: Battery Increased Notification\ndescription: Battery Increased Notification\nmode: queued\ntriggers:\n  - trigger: event\n    event_type: battery_notes_battery_increased\nconditions: []\nactions:\n  - action: persistent_notification.create\n    data:\n      title: |\n        {{ trigger.event.data.device_name }} Battery Increased\n      message: &gt;\n        The device has increased its battery level, you probably want to mark it as replaced\n</code></pre>"},{"location":"community/#check-battery-last-reported-daily","title":"Check Battery Last Reported Daily","text":"<p>Call the check battery last reported action every day to raise events for those not reported in the last two days. To be used in conjunction with a Battery Not Reported automation.</p> <pre><code>alias: Daily Battery Not Reported Check\ndescription: Check whether a battery has reported\nmode: single\ntriggers:\n  - platform: time\n    at: \"09:00:00\"\nconditions: []\nactions:\n  - action: battery_notes.check_battery_last_reported\n    data:\n      days_last_reported: 2\n</code></pre>"},{"location":"community/#battery-not-reported","title":"Battery Not Reported","text":"<p>Respond to events raised by the check_battery_last_reported action and create notifications.</p> <p>Info</p> <p>Note this cannot be run manually as it examines event triggers, use it with the Check Battery Last Reported Daily or similar.</p> <pre><code>alias: Battery Not Reported\ndescription: Battery not reported\nmode: queued\nmax: 30\ntriggers:\n  - trigger: event\n    event_type: battery_notes_battery_not_reported\nconditions: []\nactions:\n  - action: persistent_notification.create\n    data:\n      title: |\n        {{ trigger.event.data.device_name }} Battery Not Reported\n      message: &gt;\n        The device has not reported its battery level for {{\n        trigger.event.data.battery_last_reported_days }} days {{ '\\n'\n        -}} Its last reported level was {{\n        trigger.event.data.battery_last_reported_level }}% {{ '\\n' -}} You need\n        {{ trigger.event.data.battery_quantity }}\u00d7 {{\n        trigger.event.data.battery_type }}\n</code></pre>"},{"location":"community/#automation-tips","title":"Automation Tips","text":"<p>To call the battery replaced action from an entity trigger you will need the device_id, here's an easy way to get this</p> <pre><code>actions:\n  - action: battery_notes.set_battery_replaced\n    data:\n      device_id: \"{{ device_id(trigger.entity_id) }}\"\n</code></pre>"},{"location":"community/#blueprints","title":"Blueprints","text":"<p>A collection of Blueprints are available here.</p>"},{"location":"community/#contributing","title":"Contributing","text":"<p>If you want to contribute then fork the repository, edit this page which is in the docs folder and submit a pull request.</p>"},{"location":"configuration/","title":"Configuration","text":"<p>You can add these options to change the default behaviour of Battery Notes by adding them to your Home Assistant configuration.yaml under the battery_notes: property, like so:</p> <pre><code>battery_notes:\n  enable_autodiscovery: true\n  show_all_devices: false\n  enable_replaced: true\n  default_battery_low_threshold: 10\n  battery_increase_threshold: 25\n  hide_battery: false\n  round_battery: false\n</code></pre> <p>A restart of Home Assistant is required for the changed to take effect.</p> Name Type Requirement Default Description enable_autodiscovery Boolean Optional True If set to true will automatically match devices against the library and create a setup flow within the integrations page. show_all_devices Boolean Optional False If set to true will show all devices in the manual add dropdown, rather than just those with batteries. enable_replaced Boolean Optional True If set to false new devices added to battery notes will have the battery replaced sensor and button disabled.  Any devices you have previously added to Battery Notes you will have to disable these sensors manually, which also means you can enable specific sensors of important ones you want to track. default_battery_low_threshold Int Optional 10 The default threshold where a devices battery_low entity is set to true and the battery_notes_battery_threshold event is fired, can be overriden per device in device configuration. battery_increase_threshold Int Optional 25 The threshold where the battery_notes_battery_increased event is fired, use this event for battery replaced automations. The threshold is the difference in increase between previous and current battery level. hide_battery Boolean Optional False Hide the standard battery when adding Battery+. This will not effect existing dashboards, automations etc. round_battery Boolean Optional False Round battery+ to whole percentages. user_library String Optional If specified then a user library file will be searched prior to the main library, the user library must be in the same format as the library and placed in the same folder (config/.storage/battery_notes). Only really used for dev purposes."},{"location":"configuration/#debug-logging","title":"Debug Logging","text":"<p>To analyse issues on your installation it might be helpful to enable debug logging.</p> <p>You can enable debug logging by going to the Battery Notes integration page. You can use the button below.</p> <p></p> <p>Next click <code>Enable debug logging</code></p> <p>Alternatively</p> <p>Add the following to configuration.yaml:</p> <pre><code>    logger:\n      default: warning\n      logs:\n        custom_components.battery_notes: debug\n</code></pre>"},{"location":"entities/","title":"Entities","text":"<p>You'll get the following entities for each device you have added to battery notes.</p>"},{"location":"entities/#battery","title":"Battery+","text":"<p><code>sensor.{{device_name}}_battery_plus</code></p> <p>An enhanced battery sensor that duplicates the normal battery but with additional attributes specific to battery notes, Battery+ sensors are only added device type battery notes that have a battery percentage sensor, see below for adding a battery percentage if your device does not have one. Use the battery+ sensor on dashboards with secondary information fields/templates etc to display battery notes specific details along with the battery level. The original battery can optionally be hidden by adding a configuration setting.</p> <p>See how to use this entity in the community contributions</p> Attribute Type Description <code>battery_quantity</code> <code>int</code> The quantity of batteries <code>battery_type</code> <code>string</code> The type of batteries <code>battery_type_and_quantity</code> <code>string</code> The type of batteries with the quantity if more than 1 <code>battery_last_replaced</code> <code>string</code> The date and time the battery was last replaced <code>battery_low</code> <code>bool</code> An indicator of whether the battery is low based on the device or global threshold <code>battery_low_threshold</code> <code>int</code> The device or global threshold for when the battery is low <code>battery_last_reported</code> <code>datetime</code> The datetime when the battery level was last reported <code>battery_last_reported_level</code> <code>float</code> The level when the battery was last reported <code>device_id</code> <code>string</code> The device_id of the device <code>device_name</code> <code>string</code> The name of the device <code>source_entity_id</code> <code>string</code> The entity_id the battery note is associated with"},{"location":"entities/#adding-a-battery-percentage","title":"Adding a battery percentage","text":"<p>If your device does not have a battery percentage but does have a battery voltage or other indicative sensor you can create a helper to add a calculated percentage. Battery Notes will create the Battery+ sensor from this. You can create the helper as follows   </p> <ul> <li>Within Settings &gt; Devices &amp; Services &gt; Helpers press Create Helper</li> <li>Select a Template helper</li> <li>Select Template a sensor</li> <li>Give the template a name of MyDevice Battery (ensuring MyDevice exactly matches the name of the device will drop the device name from the Device sensors view and just show battery)</li> <li>The state template should reference the sensor and return a percentage Example of voltage sensor with a maximum capacity of 3 volts  <code>{{ (states('sensor.my_sensor_voltage')|float(0) / 3 * 100) | round(0) }}</code> Example of low sensor, returning either 100% or 9% <code>{{ 9 if states('binary_sensor.my_sensor_low') == true else 100 }}</code> </li> <li>Unit of measurement should be %</li> <li>Device class should be battery</li> <li>State class should be measurement</li> <li>Device should be the device you want the template associated with (this is important otherwise Battery Notes will not find the helper)</li> <li>Save the helper </li> <li>Within Settings &gt; Devices &amp; Services &gt; Integrations &gt; Battery Notes find the device you added the template to and click on the 3 dots and select Reload</li> <li>You will now have a Battery+ sensor for this device</li> </ul> <p>Info</p> <p>You must create the template via a helper for it to be associated with the device.  YAML templates do not have the ability to be associated.</p>"},{"location":"entities/#battery-type","title":"Battery Type","text":"<p><code>sensor.{{device_name}}_battery_type</code></p> <p>The battery quantity and type display in an easy to use single entity.  The quantity is only shown if more than 1.</p> Attribute Type Description <code>battery_quantity</code> <code>int</code> The quantity of batteries <code>battery_type</code> <code>string</code> The type of batteries"},{"location":"entities/#battery-last-replaced","title":"Battery Last Replaced","text":"<p><code>sensor.{{device_name}}_battery_last_replaced</code></p> <p>The last time the battery of the device was replaced.</p>"},{"location":"entities/#battery-replaced","title":"Battery Replaced","text":"<p><code>button.{{device_name}}_battery_replaced</code></p> <p>A button to set the battery_last_replaced entity to now.</p>"},{"location":"entities/#battery-low","title":"Battery Low","text":"<p><code>binary_sensor.{{device_name}}_battery_plus_low</code></p> <p>A boolean sensor indicating if the battery is low, true when the battery is below the device or global threshold. If the device has a battery percentage then this will be automatically created. If the device does not have a battery percentage but does have a battery low boolean that is a battery class then this will be automatically created and listen for changes on the original battery low sensor, raising events when the battery is low or high. If you have specified a manual template then this will be created, reflecting the state of the template, raising events when the battery is low or high.</p> Attribute Type Description <code>battery_low_threshold</code> <code>int</code> The device or global threshold for when the battery is low <code>battery_quantity</code> <code>int</code> The quantity of batteries <code>battery_type</code> <code>string</code> The type of batteries <code>battery_type_and_quantity</code> <code>string</code> The type of batteries with the quantity if more than 1 <code>battery_last_replaced</code> <code>string</code> The date and time the battery was last replaced <code>device_id</code> <code>string</code> The device_id of the device <code>device_name</code> <code>string</code> The name of the device <code>source_entity_id</code> <code>string</code> The entity_id the battery note is associated with"},{"location":"events/","title":"Events","text":"<p>The following events are raised by the integration. These events can be used within automations.</p>"},{"location":"events/#battery-threshold","title":"Battery Threshold","text":"<p><code>battery_notes_battery_threshold</code></p> <p>This is fired when a device within Battery Notes has a battery level changed to either below or above the device specific or global threshold.</p> <p>You can use this to send notifications in your preferred method.  An example automation below displays a persistent notification.  </p> <p>Note</p> <p>Battery Threshold events are only raised when the device has a Battery+ entity or a Battery Low Template is added to the Battery Notes configuration.</p> Attribute Type Description <code>device_id</code> <code>string</code> The device id of the device. <code>source_entity_id</code> <code>string</code> The entity id of the sensor associated with the battery note. <code>device_name</code> <code>string</code> The device name (or associated sensor name if no device). <code>battery_low</code> <code>bool</code> Returns true if the battery has gone below the threshold, false when the battery has returned above the threshold. Your automations will almost certainly want to examine this value and set/clear notifications or other indicators. <code>battery_low_threshold</code> <code>string</code> Battery low threshold (or global if 0). <code>battery_type_and_quantity</code> <code>string</code> Battery type &amp; quantity. <code>battery_type</code> <code>string</code> Battery type. <code>battery_quantity</code> <code>int</code> Battery quantity. <code>battery_level</code> <code>float</code> Battery level % of the device. <code>previous_battery_level</code> <code>float</code> Previous battery level % of the device. <code>battery_last_replaced</code> <code>datetime</code> The date the battery was last replaced. <code>reminder</code> <code>bool</code> Returns true if the event was raised by an action, false if it's from a device event."},{"location":"events/#automation-example","title":"Automation Example","text":"<p>See others in the community contributions</p> <pre><code>alias: Battery Low Notification\ndescription: Battery Low Notification with auto dismiss\nmode: queued\ntriggers:\n  - trigger: event\n    event_type: battery_notes_battery_threshold\n    event_data:\n      battery_low: true\n    id: low\n    alias: Battery went low\n  - trigger: event\n    event_type: battery_notes_battery_threshold\n    event_data:\n      battery_low: false\n    id: high\n    alias: Battery went high\nconditions: []\nactions:\n  - choose:\n      - conditions:\n          - condition: trigger\n            id:\n              - low\n        sequence:\n          - action: persistent_notification.create\n            data:\n              title: |\n                {{ trigger.event.data.device_name }} Battery Low\n              notification_id: \"{{ trigger.event.data.device_id }}-{{ trigger.event.data.source_entity_id }}\"\n              message: &gt;\n                The device has a battery level of {{\n                trigger.event.data.battery_level }}% {{ '\\n' -}} You need {{\n                trigger.event.data.battery_quantity }}x {{\n                trigger.event.data.battery_type }}\n      - conditions:\n          - condition: trigger\n            id:\n              - high\n        sequence:\n          - action: persistent_notification.dismiss\n            data:\n              notification_id: \"{{ trigger.event.data.device_id }}-{{ trigger.event.data.source_entity_id }}\"\n</code></pre>"},{"location":"events/#battery-increased","title":"Battery Increased","text":"<p><code>battery_notes_battery_increased</code></p> <p>This is fired when a device within Battery Notes has a battery level increased above the battery_increase_threshold (default 25%) if not changed within configuration setting.</p> <p>It deliberately does not update the battery_replaced sensor allowing you to choose how you want to handle this.  The increase theshold allows for detecting/handling of partially charged batteries rather than just full batteries. An example automation below shows how to update the battery_replaced.</p> <p>Note</p> <p>Battery Increased events are only raised when the device has a Battery+ entity or a Battery Low Template is added to the Battery Notes configuration.</p> Attribute Type Description <code>device_id</code> <code>string</code> The device id of the device. <code>source_entity_id</code> <code>string</code> The entity id of the sensor associated with the battery note. <code>device_name</code> <code>string</code> The device name (or associated sensor name if no device). <code>battery_low</code> <code>bool</code> Returns true if the battery has gone below the threshold, false when the battery has returned above the threshold. <code>battery_low_threshold</code> <code>string</code> Battery low threshold (or global if 0). <code>battery_type_and_quantity</code> <code>string</code> Battery type &amp; quantity. <code>battery_type</code> <code>string</code> Battery type. <code>battery_quantity</code> <code>int</code> Battery quantity. <code>battery_level</code> <code>float</code> Current battery level % of the device. <code>previous_battery_level</code> <code>float</code> Previous battery level % of the device. <code>battery_last_replaced</code> <code>datetime</code> The date the battery was last replaced."},{"location":"events/#automation-example_1","title":"Automation Example","text":"<p>See others in the community contributions</p> <pre><code>alias: Battery Replaced\ndescription: Battery Replaced\nmode: queued\ntriggers:\n  - trigger: event\n    event_type: battery_notes_battery_increased\nconditions: []\nactions:\n  - action: battery_notes.set_battery_replaced\n    data:\n      device_id: \"{{ trigger.event.data.device_id }}\"\n      source_entity_id: \"{{ trigger.event.data.source_entity_id }}\"\n</code></pre>"},{"location":"events/#battery-not-reported","title":"Battery Not Reported","text":"<p><code>battery_notes_battery_not_reported</code></p> <p>This is fired from the check_battery_last_reported action call for each device that has not reported its battery level for the number of days specified in the action call.</p> <p>The action can raise multiple events quickly so when using with an automation it's important to use the <code>mode: queued</code> to handle these.</p> Attribute Type Description <code>device_id</code> <code>string</code> The device id of the device. <code>source_entity_id</code> <code>string</code> The entity id of the sensor associated with the battery note. <code>device_name</code> <code>string</code> The device name (or associated sensor name if no device). <code>battery_type_and_quantity</code> <code>string</code> Battery type &amp; quantity. <code>battery_type</code> <code>string</code> Battery type. <code>battery_quantity</code> <code>int</code> Battery quantity. <code>battery_last_reported</code> <code>datetime</code> The datetime the battery was last reported. <code>battery_last_reported_days</code> <code>int</code> The number of days since the battery was last reported. <code>battery_last_reported_level</code> <code>float</code> The level of the battery when it was last reported. <code>battery_last_replaced</code> <code>datetime</code> The date the battery was last replaced."},{"location":"events/#automation-example_2","title":"Automation Example","text":"<p>See others in the community contributions</p> <p>Note this cannot be run manually as it examines event triggers.</p> <pre><code>alias: Battery Not Reported\ndescription: Battery not reported\nmode: queued\nmax: 30\ntriggers:\n  - trigger: event\n    event_type: battery_notes_battery_not_reported\nconditions: []\nactions:\n  - action: persistent_notification.create\n    data:\n      title: |\n        {{ trigger.event.data.device_name }} Battery Not Reported\n      message: &gt;\n        The device has not reported its battery level for {{\n        trigger.event.data.battery_last_reported_days }} days {{ '\\n'\n        -}} Its last reported level was {{\n        trigger.event.data.battery_last_reported_level }}% {{ '\\n' -}} You need\n        {{ trigger.event.data.battery_quantity }}\u00d7 {{\n        trigger.event.data.battery_type }}\n</code></pre>"},{"location":"events/#battery-replaced","title":"Battery Replaced","text":"<p><code>battery_notes_battery_replaced</code></p> <p>This is fired when the battery is replaced, either by a button press or the action.</p> <p>This can be useful for adding batteries to a shopping list or inventory system.</p> Attribute Type Description <code>device_id</code> <code>string</code> The device id of the device. <code>source_entity_id</code> <code>string</code> The entity id of the sensor associated with the battery note. <code>device_name</code> <code>string</code> The device name (or associated sensor name if no device). <code>battery_type_and_quantity</code> <code>string</code> Battery type &amp; quantity. <code>battery_type</code> <code>string</code> Battery type. <code>battery_quantity</code> <code>int</code> Battery quantity."},{"location":"events/#automation-example_3","title":"Automation Example","text":"<p>Note this cannot be run manually as it examines event triggers.</p> <pre><code>alias: Battery Replaced\ndescription: Battery replaced\nmode: queued\nmax: 30\ntriggers:\n  - trigger: event\n    event_type: battery_notes_battery_replaced\nconditions: []\nactions:\n  - action: persistent_notification.create\n    data:\n      title: |\n        {{ trigger.event.data.device_name }} Battery Replaced\n      message: &gt;\n        You just used {{ trigger.event.data.battery_type_and_quantity }} batteries\n</code></pre>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#does-a-device-have-to-be-in-the-library","title":"Does a device have to be in the library?","text":"<p>No, you can always add a device manually by going to Settings -&gt; Integrations -&gt; Battery Notes screen add a new device where you can enter the battery details manually.</p>"},{"location":"faq/#why-is-my-device-not-being-discovered","title":"Why is my device not being discovered?","text":"<p>It could be missing from the library or does not exactly match the name that your integration has. ZHA and Z2M for example have different manufacturers/models for the same device, you can still add it manually or contribute to the library.</p>"},{"location":"faq/#when-is-the-library-updated","title":"When is the library updated?","text":"<p>It updates when Home Assistant is restarted and approximately every 24 hours after that. It will pull the latest devices that have been merged into the main branch, if you have recently submitted a pull request for a new device it will not appear until it has been manually reviewed and merged.</p>"},{"location":"faq/#how-do-i-remove-a-battery-note-on-a-device","title":"How do I remove a battery note on a device?","text":"<p>Go into the Settings -&gt; Integrations -&gt; Battery Notes, use the menu on the right of a device and select Delete, this will only delete the battery note, not the whole device.</p>"},{"location":"faq/#can-i-edit-a-battery-note","title":"Can I edit a battery note?","text":"<p>Go into Settings -&gt; Integrations -&gt; Battery Notes and click Configure on the device you want to edit.</p>"},{"location":"faq/#why-am-i-only-able-to-see-some-of-my-devices-when-adding-manually","title":"Why am I only able to see some of my devices when adding manually?","text":"<p>By default Battery Notes filters the device list to only devices with a battery, if you want to add a battery note to a random device then you can disable this filtering by adding the following configuration to your <code>configuration.yaml</code> and restart Home Assistant to see all devices.</p> <pre><code>battery_notes:\n  show_all_devices: True\n</code></pre>"},{"location":"faq/#i-only-want-to-add-notes-to-a-few-devices-can-i-disable-auto-discovery","title":"I only want to add notes to a few devices, can I disable auto discovery?","text":"<p>If you want to disable this functionality you can add the following to your <code>configuration.yaml</code>, after a restart of Home Assistant you will not see discovered battery notes.</p> <pre><code>battery_notes:\n  enable_autodiscovery: False\n</code></pre>"},{"location":"faq/#i-dont-want-to-track-battery-replacement-can-i-disable-this","title":"I don't want to track battery replacement, can I disable this?","text":"<p>Yes, you can add the following to your <code>configuration.yaml</code>, after a restart of Home Assistant new devices added to battery notes will have the battery replaced sensor and button disabled. Any devices you have previously added to Battery Notes you will have to disable/enable these sensors manually, which also means you can just enable specific sensors of important ones you want to track.</p> <pre><code>battery_notes:\n  enable_replaced: False\n</code></pre>"},{"location":"faq/#my-device-doesnt-show-a-battery-sensor","title":"My device doesn't show a Battery+ sensor","text":"<p>This is usually because the device does not have a battery percentage, you can create one if your device has a voltage, low indicator or similar by following these instructions</p>"},{"location":"faq/#my-device-is-not-picking-up-the-proper-battery-percentage-for-battery","title":"My device is not picking up the proper battery percentage for Battery+","text":"<p>If your device has a different percentage, perhaps a max charge indicator Battery Notes cannot identify the correct battery percentage to monitor. You can either hide the entity you want Battery+ to ignore or you can remove the Battery Notes device, then re-add as an Entity Association Type manually and choose the correct battery percentage to monitor.</p>"},{"location":"faq/#how-do-i-create-a-battery-low-template","title":"How do I create a battery low template","text":"<p>The best way to do this is to test in the developer tools/template section for your sensor. Be aware that Home Assistant shows friendly alternatives for some sensors, so when you are seeing Normal/Low this may really be a bool, testing in the template tool will allow you to determine the correct template to use. Start by adapting one of these.</p> <pre><code>{{ states('sensor.mysensor_battery_low') }}\n{{ states('sensor.mysensor_battery_level') == \"Low\" }}\n{{ states('sensor.mysensor_battery_voltage') | float(5) &lt; 1 }}\n</code></pre> <p>Once you have got your template correct you can copy/paste it into the battery notes configuration section for that device and it will use that for detecting the battery is low and raising the battery notes event.</p>"},{"location":"faq/#my-shelly-device-is-not-showing-a-battery","title":"My Shelly device is not showing a Battery+","text":"<p>There seems to have been an issue with the Shelly integration at some point where the battery entity was not created properly and therefore Battery Notes cannot find it. To fix this do the following:</p> <ul> <li>Remove the battery note from the Shelly device</li> <li>Remove the Shelly device from the Shelly integration</li> <li>Re-Add the Shelly device</li> <li>Add the battery note to the device</li> </ul>"},{"location":"faq/#how-do-i-install-pre-release-versions-via-hacs","title":"How do I install pre-release versions via HACS","text":"<p>Within Home Assistant go to Settings -&gt; Integrations -&gt; HACS Select Services Select Battery Notes In the Diagnostics panel select the +1 entity not shown Select Pre-release Select the cog icon Select Enable Select Update and wait for the entity to be enabled Turn on the Pre-release toggle HACS will now show updates available for pre-releases if there are any</p>"},{"location":"faq/#how-do-i-uninstall-battery-notes","title":"How do I uninstall Battery Notes","text":"<p>Within Home Assistant go to Settings -&gt; Integrations -&gt; Battery Notes For each Battery Note click on the three dots and select Delete Go to HACS from your sidebar Click on the three dots next to Battery Notes and select Remove Edit your configuration.yaml file and remove the battery_notes section and any options indented directly under it Restart Home Assistant</p>"},{"location":"faq/#how-can-i-show-my-support","title":"How can I show my support?","text":""},{"location":"library/","title":"Library","text":"<p>The library contains user contributed device definitions to allow discovery of the most popular devices. The library is updated when Home Assistant is restarted and approximately every 24 hours after that. It will pull the latest devices that have been merged into the main branch, if you have recently submitted a pull request for a new device it will not appear until it has been manually reviewed and merged.</p>"},{"location":"library/#contributing-to-the-library","title":"Contributing to the library","text":""},{"location":"library/#submit-definition-via-github-issues-form","title":"Submit Definition via GitHub Issues Form","text":"<p>Upon submission using the form above GitHub will attempt to make the required code changes automatically.</p>"},{"location":"library/#submit-definition-via-pull-request","title":"Submit Definition via Pull Request","text":"<p>Fork the repository, add your device details to the JSON document <code>library/library.json</code>, and then submit a pull request. Do not enable GitHub Actions (disabled by default) as this will mess with the pull request and are unnecessary for a library submission.</p> <ul> <li>The easiest way to get the correct device information is to add the device manually to Battery Notes, on the battery type panel you will see a summary at the top of the details required to add to the library. This is also available if you go into configure of the device in battery notes.</li> <li>In some rare cases models could contain unique identifiers and you want the battery type to apply to all models that match a pattern, in these instances you can use the optional model_match_method attribute. For example Apple iPhone's have a model of iPhoneXX.X but all have a rechargeable battery, here you could use the \"model_match_method\": \"startswith\" and just specify iPhone as the model.</li> <li>The manufacturer &amp; model names may be different between integrations such as Zigbee2MQTT and ZHA, if you see a similar device please duplicate the entry rather than changing it.</li> <li>The <code>battery_quantity</code> data is numeric (no quotes) and optional. If a device only requires a single battery, it should be omitted.</li> <li>The <code>battery_type</code> data should follow the most common naming for general batteries (ex. AAA, D) and the IEC naming for battery cells according to Wikipedia (ex. CR2032, 18650)</li> <li>If a device has a bespoke rechargeable battery you can use <code>\"battery_type\": \"Rechargeable\"</code></li> <li>For devices like smoke alarms where the battery is not replaceable you can use <code>\"battery_type\": \"Irreplaceable\"</code></li> <li>If a device shouldn't be discovered because there are multiple revisions with the same model number but different battery types it can be added to the library with a <code>\"battery_type\": \"MANUAL\"</code> to note it is a device that shouldn't have a battery definition added to the library to save removal/re-add because people don't realise there are variants.</li> </ul> <p>For the example image below, your JSON entry will look like this:</p> <pre><code>{\n    \"manufacturer\": \"Philips\",\n    \"model\": \"Hue motion sensor\",\n    \"model_id\": \"9290012607\", &lt; Optional, only add it if your device shows it.\n    \"hw_version\": \"Some specific hardware detail\", &lt; Optional, only add it if your device shows it.\n    \"battery_type\": \"AAA\",\n    \"battery_quantity\": 2,  &lt; Only use if more than 1 battery\n    \"model_match_method\": \"startswith|endswith|contains\" &lt; Only use if you are creating a model with unique identifier (ex. trailing serial numbers)\n},\n</code></pre> <p></p>"},{"location":"translations/","title":"Translations","text":"<p>You can help by adding missing translations when you are a native speaker. Or add a complete new language when there is no language file available.</p> <p>Battery Notes uses Crowdin to make contributing easy.</p>"},{"location":"translations/#changing-or-adding-to-existing-language","title":"Changing or adding to existing language","text":"<p>First register and join the translation project</p> <ul> <li>If you don\u2019t have a Crowdin account yet, create one at https://crowdin.com</li> <li>Go to the Battery Notes Crowdin project page</li> <li>Click Join.</li> </ul> <p>Next translate a string</p> <ul> <li>Select the language you want to contribute to from the dashboard.</li> <li>Click Translate All.</li> <li>Find the string you want to edit, missing translation are marked red.</li> <li>Fill in or modify the translation and click Save.</li> <li>Repeat for other translations.</li> </ul> <p>Info</p> <p>Battery Notes will automatically pull in latest changes to translations every day and create a Pull Request. After that is reviewed by a maintainer it will be included in the next release of Battery Notes.</p>"},{"location":"translations/#adding-a-new-language","title":"Adding a new language","text":"<p>Create an Issue requesting a new language. We will do the necessary work to add the new translation to the integration and Crowdin site, when it's ready for you to contribute we'll comment on the issue you raised.</p>"}]}